kw_function: bazmek
kw_if: esli
kw_else: jinac
op_assign: navali
sign_minus: -
op_add: plus
op_subtract: minus
op_multiply: krat
op_divide: deleno
par_open: (
par_close: )
block_start: vocat
block_end: pocat
keyword: function_name|kw_if|kw_else|kw_function
kw_function_call: Hola
array_operator: #

ENDING: .|:
LINE: EXPRESSION|FC_CALL|FC_DEFINE|ARRAY
EXPRESSION: E1 {op_assign E1}
E1: E2 {op_add|op_subtract|op_multiply|op_divide E2}|
E2: {sign_minus} F
F: ident|number|string|par_open EXPRESSION par_close
FC_CALL: kw_function_call F {par_open F{, F} par_close} ENDING
FC_DEFINE: kw_function F par_open {F{, F}} par_close block_start EXPRESSION {ENDING EXPRESSION} block_end ENDING
ARRAY_.. : F array_operator F|array_operator

hovno ## = "piƒça"
hovno #1 
